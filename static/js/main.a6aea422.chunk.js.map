{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","e","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BG,OAAOG,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MAC9D,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,YAAcT,KAAKU,MAAMD,WACrCR,OAAOG,QAAQO,MAAf,uBAAqCH,EAAUC,UAA/C,eAA+DT,KAAKU,MAAMD,cAjBhF,kCAqBE,WACER,OAAOW,cAAcZ,KAAKD,WAtB9B,oBAyBE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,YAEd,+BACG,cAEH,sBAAMI,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,YAnCtD,GAA2BO,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVZ,UAAW,WAHf,EAMEV,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAWO,QAC1B,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAEC,iBAEE,EAAK7B,MAAMyB,UACb,EAAKlB,SAAS,CAAEkB,UAAU,OAI9BC,SAASC,iBAAiB,SAAS,WAC5B,EAAK3B,MAAMyB,UACd,EAAKlB,SAAS,CAAEkB,UAAU,SAvBlC,kCA4BE,WACEpB,OAAOW,cAAcZ,KAAKD,WA7B9B,oBAgCE,WACE,OACE,sBAAKc,UAAU,MAAf,UACE,6CACCb,KAAKJ,MAAMyB,UAAY,cAAC,EAAD,CAAOZ,UAAWT,KAAKJ,MAAMa,mBApC7D,GAAyBK,IAAMC,WCZ/BW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.a6aea422.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      window.console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      window.console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n        <span>\n          {' time is '}\n        </span>\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n\n      if (this.state.hasClock) {\n        this.setState({ hasClock: false });\n      }\n    });\n\n    document.addEventListener('click', () => {\n      if (!this.state.hasClock) {\n        this.setState({ hasClock: true });\n      }\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}